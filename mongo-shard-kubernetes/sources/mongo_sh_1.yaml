---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongosh1-pv-1
  labels:
    pv: mongosh1-pv-1
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  glusterfs:
    endpoints: "mongo1-1"
    path: "mongo1-1"
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongosh1-pvc-1
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: mongosh1-pv-1
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongosh1-pv-2
  labels:
    pv: mongosh1-pv-2
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  glusterfs:
    endpoints: "mongo1-2"
    path: "mongo1-2"
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongosh1-pvc-2
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: mongosh1-pv-2
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongosh1-pv-3
  labels:
    pv: mongosh1-pv-3
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Delete
  glusterfs:
    endpoints: "mongo1-3"
    path: "mongo1-3"
    readOnly: false
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongosh1-pvc-3
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  selector:
    matchLabels:
      pv: mongosh1-pv-3
---
apiVersion: v1
kind: Service
metadata:
  name: mongosh1-1
  labels:
    run: mongosh1-1
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    run: mongosh1-1
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mongosh1-1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongosh1-1
        run: mongosh1-1
    spec:
      restartPolicy: Always
      hostname: mongosh1-1
      containers:
      - image: mongo:latest
        name: mongosh1-1
        ports:
        - name: mongosh1-1
          containerPort: 27017
        volumeMounts:
          - name: mongosh1-1
            mountPath: /mongosh1-1/db
          - name: keyfile
            mountPath: "/data/keyfile"
            readOnly: true
        command: ["mongod"]
        args: ["--noprealloc", "--smallfiles", "--shardsvr", "--replSet", "rs1", "--dbpath","/mongosh1-1/db", "--port", "27017", "--bind_ip_all", "--keyFile", "/data/keyfile/keyfile"]
      volumes:
        - name: keyfile
          secret:
            secretName: keyfile
            defaultMode: 0400
        - name: mongosh1-1
          persistentVolumeClaim:
           claimName: mongosh1-pvc-1
---
# Mongo shard replica set 1 node 2
apiVersion: v1
kind: Service
metadata:
  name: mongosh1-2
  labels:
    run: mongosh1-2
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    run: mongosh1-2
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mongosh1-2
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongosh1-2
        run: mongosh1-2
    spec:
      restartPolicy: Always
      hostname: mongosh1-2
      containers:
      - image: mongo:latest
        name: mongosh1-2
        ports:
        - name: mongosh1-2
          containerPort: 27017
        volumeMounts:
          - name: mongosh1-2
            mountPath: /mongosh1-2/db
          - name: keyfile
            mountPath: "/data/keyfile"
            readOnly: true
        command: ["mongod"]
        args: ["--noprealloc", "--smallfiles", "--shardsvr", "--replSet", "rs1", "--dbpath","/mongosh1-2/db", "--port", "27017", "--bind_ip_all", "--keyFile", "/data/keyfile/keyfile"]
      volumes:
        - name: keyfile
          secret:
            secretName: keyfile
            defaultMode: 0400
        - name: mongosh1-2
          persistentVolumeClaim:
           claimName: mongosh1-pvc-2
---
# Mongo shard replica set 1 node 1
apiVersion: v1
kind: Service
metadata:
  name: mongosh1-3
  labels:
    run: mongosh1-3
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    run: mongosh1-3
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: mongosh1-3
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: mongosh1-3
        run: mongosh1-3
    spec:
      restartPolicy: Always
      hostname: mongosh1-3
      containers:
      - image: mongo:latest
        name: mongosh1-3
        ports:
        - name: mongosh1-3
          containerPort: 27017
        volumeMounts:
          - name: mongosh1-3
            mountPath: /mongosh1-3/db
          - name: keyfile
            mountPath: "/data/keyfile"
            readOnly: true
        command: ["mongod"]
        args: ["--noprealloc", "--smallfiles", "--shardsvr", "--replSet", "rs1", "--dbpath","/mongosh1-3/db", "--port", "27017", "--bind_ip_all", "--keyFile", "/data/keyfile/keyfile"]
      volumes:
        - name: keyfile
          secret:
            secretName: keyfile
            defaultMode: 0400
        - name: mongosh1-3
          persistentVolumeClaim:
           claimName: mongosh1-pvc-3
